{"id":"../node_modules/json-logic-js/logic.js","dependencies":[{"name":"C:\\Users\\Sushant\\repositories\\github\\form-builder\\package.json","includedInParent":true,"mtime":1573827147174},{"name":"C:\\Users\\Sushant\\repositories\\github\\form-builder\\node_modules\\json-logic-js\\package.json","includedInParent":true,"mtime":1573823875026}],"generated":{"js":"var define;\n/* globals define,module */\n/*\nUsing a Universal Module Loader that should be browser, require, and AMD friendly\nhttp://ricostacruz.com/cheatsheets/umdjs.html\n*/\n;(function(root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(factory);\n  } else if (typeof exports === \"object\") {\n    module.exports = factory();\n  } else {\n    root.jsonLogic = factory();\n  }\n}(this, function() {\n  \"use strict\";\n  /* globals console:false */\n\n  if ( ! Array.isArray) {\n    Array.isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === \"[object Array]\";\n    };\n  }\n\n  /**\n   * Return an array that contains no duplicates (original not modified)\n   * @param  {array} array   Original reference array\n   * @return {array}         New array with no duplicates\n   */\n  function arrayUnique(array) {\n    var a = [];\n    for (var i=0, l=array.length; i<l; i++) {\n      if (a.indexOf(array[i]) === -1) {\n        a.push(array[i]);\n      }\n    }\n    return a;\n  }\n\n  var jsonLogic = {};\n  var operations = {\n    \"==\": function(a, b) {\n      return a == b;\n    },\n    \"===\": function(a, b) {\n      return a === b;\n    },\n    \"!=\": function(a, b) {\n      return a != b;\n    },\n    \"!==\": function(a, b) {\n      return a !== b;\n    },\n    \">\": function(a, b) {\n      return a > b;\n    },\n    \">=\": function(a, b) {\n      return a >= b;\n    },\n    \"<\": function(a, b, c) {\n      return (c === undefined) ? a < b : (a < b) && (b < c);\n    },\n    \"<=\": function(a, b, c) {\n      return (c === undefined) ? a <= b : (a <= b) && (b <= c);\n    },\n    \"!!\": function(a) {\n      return jsonLogic.truthy(a);\n    },\n    \"!\": function(a) {\n      return !jsonLogic.truthy(a);\n    },\n    \"%\": function(a, b) {\n      return a % b;\n    },\n    \"log\": function(a) {\n      console.log(a); return a;\n    },\n    \"in\": function(a, b) {\n      if(!b || typeof b.indexOf === \"undefined\") return false;\n      return (b.indexOf(a) !== -1);\n    },\n    \"cat\": function() {\n      return Array.prototype.join.call(arguments, \"\");\n    },\n    \"substr\":function(source, start, end) {\n      if(end < 0){\n        // JavaScript doesn't support negative end, this emulates PHP behavior\n        var temp = String(source).substr(start);\n        return temp.substr(0, temp.length + end);\n      }\n      return String(source).substr(start, end);\n    },\n    \"+\": function() {\n      return Array.prototype.reduce.call(arguments, function(a, b) {\n        return parseFloat(a, 10) + parseFloat(b, 10);\n      }, 0);\n    },\n    \"*\": function() {\n      return Array.prototype.reduce.call(arguments, function(a, b) {\n        return parseFloat(a, 10) * parseFloat(b, 10);\n      });\n    },\n    \"-\": function(a, b) {\n      if(b === undefined) {\n        return -a;\n      }else{\n        return a - b;\n      }\n    },\n    \"/\": function(a, b) {\n      return a / b;\n    },\n    \"min\": function() {\n      return Math.min.apply(this, arguments);\n    },\n    \"max\": function() {\n      return Math.max.apply(this, arguments);\n    },\n    \"merge\": function() {\n      return Array.prototype.reduce.call(arguments, function(a, b) {\n        return a.concat(b);\n      }, []);\n    },\n    \"var\": function(a, b) {\n      var not_found = (b === undefined) ? null : b;\n      var data = this;\n      if(typeof a === \"undefined\" || a===\"\" || a===null) {\n        return data;\n      }\n      var sub_props = String(a).split(\".\");\n      for(var i = 0; i < sub_props.length; i++) {\n        if(data === null) {\n          return not_found;\n        }\n        // Descending into data\n        data = data[sub_props[i]];\n        if(data === undefined) {\n          return not_found;\n        }\n      }\n      return data;\n    },\n    \"missing\": function() {\n      /*\n      Missing can receive many keys as many arguments, like {\"missing:[1,2]}\n      Missing can also receive *one* argument that is an array of keys,\n      which typically happens if it's actually acting on the output of another command\n      (like 'if' or 'merge')\n      */\n\n      var missing = [];\n      var keys = Array.isArray(arguments[0]) ? arguments[0] : arguments;\n\n      for(var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = jsonLogic.apply({\"var\": key}, this);\n        if(value === null || value === \"\") {\n          missing.push(key);\n        }\n      }\n\n      return missing;\n    },\n    \"missing_some\": function(need_count, options) {\n      // missing_some takes two arguments, how many (minimum) items must be present, and an array of keys (just like 'missing') to check for presence.\n      var are_missing = jsonLogic.apply({\"missing\": options}, this);\n\n      if(options.length - are_missing.length >= need_count) {\n        return [];\n      }else{\n        return are_missing;\n      }\n    },\n    \"method\": function(obj, method, args) {\n      return obj[method].apply(obj, args);\n    },\n\n  };\n\n  jsonLogic.is_logic = function(logic) {\n    return (\n      typeof logic === \"object\" && // An object\n      logic !== null && // but not null\n      ! Array.isArray(logic) && // and not an array\n      Object.keys(logic).length === 1 // with exactly one key\n    );\n  };\n\n  /*\n  This helper will defer to the JsonLogic spec as a tie-breaker when different language interpreters define different behavior for the truthiness of primitives.  E.g., PHP considers empty arrays to be falsy, but Javascript considers them to be truthy. JsonLogic, as an ecosystem, needs one consistent answer.\n\n  Spec and rationale here: http://jsonlogic.com/truthy\n  */\n  jsonLogic.truthy = function(value) {\n    if(Array.isArray(value) && value.length === 0) {\n      return false;\n    }\n    return !! value;\n  };\n\n\n  jsonLogic.get_operator = function(logic) {\n    return Object.keys(logic)[0];\n  };\n\n  jsonLogic.get_values = function(logic) {\n    return logic[jsonLogic.get_operator(logic)];\n  };\n\n  jsonLogic.apply = function(logic, data) {\n    // Does this array contain logic? Only one way to find out.\n    if(Array.isArray(logic)) {\n      return logic.map(function(l) {\n        return jsonLogic.apply(l, data);\n      });\n    }\n    // You've recursed to a primitive, stop!\n    if( ! jsonLogic.is_logic(logic) ) {\n      return logic;\n    }\n\n    data = data || {};\n\n    var op = jsonLogic.get_operator(logic);\n    var values = logic[op];\n    var i;\n    var current;\n    var scopedLogic, scopedData, filtered, initial;\n\n    // easy syntax for unary operators, like {\"var\" : \"x\"} instead of strict {\"var\" : [\"x\"]}\n    if( ! Array.isArray(values)) {\n      values = [values];\n    }\n\n    // 'if', 'and', and 'or' violate the normal rule of depth-first calculating consequents, let each manage recursion as needed.\n    if(op === \"if\" || op == \"?:\") {\n      /* 'if' should be called with a odd number of parameters, 3 or greater\n      This works on the pattern:\n      if( 0 ){ 1 }else{ 2 };\n      if( 0 ){ 1 }else if( 2 ){ 3 }else{ 4 };\n      if( 0 ){ 1 }else if( 2 ){ 3 }else if( 4 ){ 5 }else{ 6 };\n\n      The implementation is:\n      For pairs of values (0,1 then 2,3 then 4,5 etc)\n      If the first evaluates truthy, evaluate and return the second\n      If the first evaluates falsy, jump to the next pair (e.g, 0,1 to 2,3)\n      given one parameter, evaluate and return it. (it's an Else and all the If/ElseIf were false)\n      given 0 parameters, return NULL (not great practice, but there was no Else)\n      */\n      for(i = 0; i < values.length - 1; i += 2) {\n        if( jsonLogic.truthy( jsonLogic.apply(values[i], data) ) ) {\n          return jsonLogic.apply(values[i+1], data);\n        }\n      }\n      if(values.length === i+1) return jsonLogic.apply(values[i], data);\n      return null;\n    }else if(op === \"and\") { // Return first falsy, or last\n      for(i=0; i < values.length; i+=1) {\n        current = jsonLogic.apply(values[i], data);\n        if( ! jsonLogic.truthy(current)) {\n          return current;\n        }\n      }\n      return current; // Last\n    }else if(op === \"or\") {// Return first truthy, or last\n      for(i=0; i < values.length; i+=1) {\n        current = jsonLogic.apply(values[i], data);\n        if( jsonLogic.truthy(current) ) {\n          return current;\n        }\n      }\n      return current; // Last\n\n\n\n\n    }else if(op === 'filter'){\n      scopedData = jsonLogic.apply(values[0], data);\n      scopedLogic = values[1];\n\n      if ( ! Array.isArray(scopedData)) {\n          return [];\n      }\n      // Return only the elements from the array in the first argument,\n      // that return truthy when passed to the logic in the second argument.\n      // For parity with JavaScript, reindex the returned array\n      return scopedData.filter(function(datum){\n          return jsonLogic.truthy( jsonLogic.apply(scopedLogic, datum));\n      });\n  }else if(op === 'map'){\n      scopedData = jsonLogic.apply(values[0], data);\n      scopedLogic = values[1];\n\n      if ( ! Array.isArray(scopedData)) {\n          return [];\n      }\n\n      return scopedData.map(function(datum){\n          return jsonLogic.apply(scopedLogic, datum);\n      });\n\n  }else if(op === 'reduce'){\n      scopedData = jsonLogic.apply(values[0], data);\n      scopedLogic = values[1];\n      initial = typeof values[2] !== 'undefined' ? values[2] : null;\n\n      if ( ! Array.isArray(scopedData)) {\n          return initial;\n      }\n\n      return scopedData.reduce(\n          function(accumulator, current){\n              return jsonLogic.apply(\n                  scopedLogic,\n                  {'current':current, 'accumulator':accumulator}\n              );\n          },\n          initial\n      );\n\n    }else if(op === \"all\") {\n      scopedData = jsonLogic.apply(values[0], data);\n      scopedLogic = values[1];\n      // All of an empty set is false. Note, some and none have correct fallback after the for loop\n      if( ! scopedData.length) {\n        return false;\n      }\n      for(i=0; i < scopedData.length; i+=1) {\n        if( ! jsonLogic.truthy( jsonLogic.apply(scopedLogic, scopedData[i]) )) {\n          return false; // First falsy, short circuit\n        }\n      }\n      return true; // All were truthy\n    }else if(op === \"none\") {\n      filtered = jsonLogic.apply({'filter' : values}, data);\n      return filtered.length === 0;\n\n    }else if(op === \"some\") {\n      filtered = jsonLogic.apply({'filter' : values}, data);\n      return filtered.length > 0;\n    }\n\n    // Everyone else gets immediate depth-first recursion\n    values = values.map(function(val) {\n      return jsonLogic.apply(val, data);\n    });\n\n\n    // The operation is called with \"data\" bound to its \"this\" and \"values\" passed as arguments.\n    // Structured commands like % or > can name formal arguments while flexible commands (like missing or merge) can operate on the pseudo-array arguments\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments\n    if(typeof operations[op] === \"function\") {\n      return operations[op].apply(data, values);\n    }else if(op.indexOf(\".\") > 0) { // Contains a dot, and not in the 0th position\n      var sub_ops = String(op).split(\".\");\n      var operation = operations;\n      for(i = 0; i < sub_ops.length; i++) {\n        // Descending into operations\n        operation = operation[sub_ops[i]];\n        if(operation === undefined) {\n          throw new Error(\"Unrecognized operation \" + op +\n          \" (failed at \" + sub_ops.slice(0, i+1).join(\".\") + \")\");\n        }\n      }\n\n      return operation.apply(data, values);\n    }\n\n    throw new Error(\"Unrecognized operation \" + op );\n  };\n\n  jsonLogic.uses_data = function(logic) {\n    var collection = [];\n\n    if( jsonLogic.is_logic(logic) ) {\n      var op = jsonLogic.get_operator(logic);\n      var values = logic[op];\n\n      if( ! Array.isArray(values)) {\n        values = [values];\n      }\n\n      if(op === \"var\") {\n        // This doesn't cover the case where the arg to var is itself a rule.\n        collection.push(values[0]);\n      }else{\n        // Recursion!\n        values.map(function(val) {\n          collection.push.apply(collection, jsonLogic.uses_data(val) );\n        });\n      }\n    }\n\n    return arrayUnique(collection);\n  };\n\n  jsonLogic.add_operation = function(name, code) {\n    operations[name] = code;\n  };\n\n  jsonLogic.rm_operation = function(name) {\n    delete operations[name];\n  };\n\n  jsonLogic.rule_like = function(rule, pattern) {\n    // console.log(\"Is \". JSON.stringify(rule) . \" like \" . JSON.stringify(pattern) . \"?\");\n    if(pattern === rule) {\n      return true;\n    } // TODO : Deep object equivalency?\n    if(pattern === \"@\") {\n      return true;\n    } // Wildcard!\n    if(pattern === \"number\") {\n      return (typeof rule === \"number\");\n    }\n    if(pattern === \"string\") {\n      return (typeof rule === \"string\");\n    }\n    if(pattern === \"array\") {\n      // !logic test might be superfluous in JavaScript\n      return Array.isArray(rule) && ! jsonLogic.is_logic(rule);\n    }\n\n    if(jsonLogic.is_logic(pattern)) {\n      if(jsonLogic.is_logic(rule)) {\n        var pattern_op = jsonLogic.get_operator(pattern);\n        var rule_op = jsonLogic.get_operator(rule);\n\n        if(pattern_op === \"@\" || pattern_op === rule_op) {\n        // echo \"\\nOperators match, go deeper\\n\";\n          return jsonLogic.rule_like(\n            jsonLogic.get_values(rule, false),\n            jsonLogic.get_values(pattern, false)\n          );\n        }\n      }\n      return false; // pattern is logic, rule isn't, can't be eq\n    }\n\n    if(Array.isArray(pattern)) {\n      if(Array.isArray(rule)) {\n        if(pattern.length !== rule.length) {\n          return false;\n        }\n        /*\n          Note, array order MATTERS, because we're using this array test logic to consider arguments, where order can matter. (e.g., + is commutative, but '-' or 'if' or 'var' are NOT)\n        */\n        for(var i = 0; i < pattern.length; i += 1) {\n          // If any fail, we fail\n          if( ! jsonLogic.rule_like(rule[i], pattern[i])) {\n            return false;\n          }\n        }\n        return true; // If they *all* passed, we pass\n      }else{\n        return false; // Pattern is array, rule isn't\n      }\n    }\n\n    // Not logic, not array, not a === match for rule.\n    return false;\n  };\n\n  return jsonLogic;\n}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/json-logic-js/logic.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/json-logic-js/logic.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}}],"sources":{"../node_modules/json-logic-js/logic.js":"/* globals define,module */\n/*\nUsing a Universal Module Loader that should be browser, require, and AMD friendly\nhttp://ricostacruz.com/cheatsheets/umdjs.html\n*/\n;(function(root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(factory);\n  } else if (typeof exports === \"object\") {\n    module.exports = factory();\n  } else {\n    root.jsonLogic = factory();\n  }\n}(this, function() {\n  \"use strict\";\n  /* globals console:false */\n\n  if ( ! Array.isArray) {\n    Array.isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === \"[object Array]\";\n    };\n  }\n\n  /**\n   * Return an array that contains no duplicates (original not modified)\n   * @param  {array} array   Original reference array\n   * @return {array}         New array with no duplicates\n   */\n  function arrayUnique(array) {\n    var a = [];\n    for (var i=0, l=array.length; i<l; i++) {\n      if (a.indexOf(array[i]) === -1) {\n        a.push(array[i]);\n      }\n    }\n    return a;\n  }\n\n  var jsonLogic = {};\n  var operations = {\n    \"==\": function(a, b) {\n      return a == b;\n    },\n    \"===\": function(a, b) {\n      return a === b;\n    },\n    \"!=\": function(a, b) {\n      return a != b;\n    },\n    \"!==\": function(a, b) {\n      return a !== b;\n    },\n    \">\": function(a, b) {\n      return a > b;\n    },\n    \">=\": function(a, b) {\n      return a >= b;\n    },\n    \"<\": function(a, b, c) {\n      return (c === undefined) ? a < b : (a < b) && (b < c);\n    },\n    \"<=\": function(a, b, c) {\n      return (c === undefined) ? a <= b : (a <= b) && (b <= c);\n    },\n    \"!!\": function(a) {\n      return jsonLogic.truthy(a);\n    },\n    \"!\": function(a) {\n      return !jsonLogic.truthy(a);\n    },\n    \"%\": function(a, b) {\n      return a % b;\n    },\n    \"log\": function(a) {\n      console.log(a); return a;\n    },\n    \"in\": function(a, b) {\n      if(!b || typeof b.indexOf === \"undefined\") return false;\n      return (b.indexOf(a) !== -1);\n    },\n    \"cat\": function() {\n      return Array.prototype.join.call(arguments, \"\");\n    },\n    \"substr\":function(source, start, end) {\n      if(end < 0){\n        // JavaScript doesn't support negative end, this emulates PHP behavior\n        var temp = String(source).substr(start);\n        return temp.substr(0, temp.length + end);\n      }\n      return String(source).substr(start, end);\n    },\n    \"+\": function() {\n      return Array.prototype.reduce.call(arguments, function(a, b) {\n        return parseFloat(a, 10) + parseFloat(b, 10);\n      }, 0);\n    },\n    \"*\": function() {\n      return Array.prototype.reduce.call(arguments, function(a, b) {\n        return parseFloat(a, 10) * parseFloat(b, 10);\n      });\n    },\n    \"-\": function(a, b) {\n      if(b === undefined) {\n        return -a;\n      }else{\n        return a - b;\n      }\n    },\n    \"/\": function(a, b) {\n      return a / b;\n    },\n    \"min\": function() {\n      return Math.min.apply(this, arguments);\n    },\n    \"max\": function() {\n      return Math.max.apply(this, arguments);\n    },\n    \"merge\": function() {\n      return Array.prototype.reduce.call(arguments, function(a, b) {\n        return a.concat(b);\n      }, []);\n    },\n    \"var\": function(a, b) {\n      var not_found = (b === undefined) ? null : b;\n      var data = this;\n      if(typeof a === \"undefined\" || a===\"\" || a===null) {\n        return data;\n      }\n      var sub_props = String(a).split(\".\");\n      for(var i = 0; i < sub_props.length; i++) {\n        if(data === null) {\n          return not_found;\n        }\n        // Descending into data\n        data = data[sub_props[i]];\n        if(data === undefined) {\n          return not_found;\n        }\n      }\n      return data;\n    },\n    \"missing\": function() {\n      /*\n      Missing can receive many keys as many arguments, like {\"missing:[1,2]}\n      Missing can also receive *one* argument that is an array of keys,\n      which typically happens if it's actually acting on the output of another command\n      (like 'if' or 'merge')\n      */\n\n      var missing = [];\n      var keys = Array.isArray(arguments[0]) ? arguments[0] : arguments;\n\n      for(var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = jsonLogic.apply({\"var\": key}, this);\n        if(value === null || value === \"\") {\n          missing.push(key);\n        }\n      }\n\n      return missing;\n    },\n    \"missing_some\": function(need_count, options) {\n      // missing_some takes two arguments, how many (minimum) items must be present, and an array of keys (just like 'missing') to check for presence.\n      var are_missing = jsonLogic.apply({\"missing\": options}, this);\n\n      if(options.length - are_missing.length >= need_count) {\n        return [];\n      }else{\n        return are_missing;\n      }\n    },\n    \"method\": function(obj, method, args) {\n      return obj[method].apply(obj, args);\n    },\n\n  };\n\n  jsonLogic.is_logic = function(logic) {\n    return (\n      typeof logic === \"object\" && // An object\n      logic !== null && // but not null\n      ! Array.isArray(logic) && // and not an array\n      Object.keys(logic).length === 1 // with exactly one key\n    );\n  };\n\n  /*\n  This helper will defer to the JsonLogic spec as a tie-breaker when different language interpreters define different behavior for the truthiness of primitives.  E.g., PHP considers empty arrays to be falsy, but Javascript considers them to be truthy. JsonLogic, as an ecosystem, needs one consistent answer.\n\n  Spec and rationale here: http://jsonlogic.com/truthy\n  */\n  jsonLogic.truthy = function(value) {\n    if(Array.isArray(value) && value.length === 0) {\n      return false;\n    }\n    return !! value;\n  };\n\n\n  jsonLogic.get_operator = function(logic) {\n    return Object.keys(logic)[0];\n  };\n\n  jsonLogic.get_values = function(logic) {\n    return logic[jsonLogic.get_operator(logic)];\n  };\n\n  jsonLogic.apply = function(logic, data) {\n    // Does this array contain logic? Only one way to find out.\n    if(Array.isArray(logic)) {\n      return logic.map(function(l) {\n        return jsonLogic.apply(l, data);\n      });\n    }\n    // You've recursed to a primitive, stop!\n    if( ! jsonLogic.is_logic(logic) ) {\n      return logic;\n    }\n\n    data = data || {};\n\n    var op = jsonLogic.get_operator(logic);\n    var values = logic[op];\n    var i;\n    var current;\n    var scopedLogic, scopedData, filtered, initial;\n\n    // easy syntax for unary operators, like {\"var\" : \"x\"} instead of strict {\"var\" : [\"x\"]}\n    if( ! Array.isArray(values)) {\n      values = [values];\n    }\n\n    // 'if', 'and', and 'or' violate the normal rule of depth-first calculating consequents, let each manage recursion as needed.\n    if(op === \"if\" || op == \"?:\") {\n      /* 'if' should be called with a odd number of parameters, 3 or greater\n      This works on the pattern:\n      if( 0 ){ 1 }else{ 2 };\n      if( 0 ){ 1 }else if( 2 ){ 3 }else{ 4 };\n      if( 0 ){ 1 }else if( 2 ){ 3 }else if( 4 ){ 5 }else{ 6 };\n\n      The implementation is:\n      For pairs of values (0,1 then 2,3 then 4,5 etc)\n      If the first evaluates truthy, evaluate and return the second\n      If the first evaluates falsy, jump to the next pair (e.g, 0,1 to 2,3)\n      given one parameter, evaluate and return it. (it's an Else and all the If/ElseIf were false)\n      given 0 parameters, return NULL (not great practice, but there was no Else)\n      */\n      for(i = 0; i < values.length - 1; i += 2) {\n        if( jsonLogic.truthy( jsonLogic.apply(values[i], data) ) ) {\n          return jsonLogic.apply(values[i+1], data);\n        }\n      }\n      if(values.length === i+1) return jsonLogic.apply(values[i], data);\n      return null;\n    }else if(op === \"and\") { // Return first falsy, or last\n      for(i=0; i < values.length; i+=1) {\n        current = jsonLogic.apply(values[i], data);\n        if( ! jsonLogic.truthy(current)) {\n          return current;\n        }\n      }\n      return current; // Last\n    }else if(op === \"or\") {// Return first truthy, or last\n      for(i=0; i < values.length; i+=1) {\n        current = jsonLogic.apply(values[i], data);\n        if( jsonLogic.truthy(current) ) {\n          return current;\n        }\n      }\n      return current; // Last\n\n\n\n\n    }else if(op === 'filter'){\n      scopedData = jsonLogic.apply(values[0], data);\n      scopedLogic = values[1];\n\n      if ( ! Array.isArray(scopedData)) {\n          return [];\n      }\n      // Return only the elements from the array in the first argument,\n      // that return truthy when passed to the logic in the second argument.\n      // For parity with JavaScript, reindex the returned array\n      return scopedData.filter(function(datum){\n          return jsonLogic.truthy( jsonLogic.apply(scopedLogic, datum));\n      });\n  }else if(op === 'map'){\n      scopedData = jsonLogic.apply(values[0], data);\n      scopedLogic = values[1];\n\n      if ( ! Array.isArray(scopedData)) {\n          return [];\n      }\n\n      return scopedData.map(function(datum){\n          return jsonLogic.apply(scopedLogic, datum);\n      });\n\n  }else if(op === 'reduce'){\n      scopedData = jsonLogic.apply(values[0], data);\n      scopedLogic = values[1];\n      initial = typeof values[2] !== 'undefined' ? values[2] : null;\n\n      if ( ! Array.isArray(scopedData)) {\n          return initial;\n      }\n\n      return scopedData.reduce(\n          function(accumulator, current){\n              return jsonLogic.apply(\n                  scopedLogic,\n                  {'current':current, 'accumulator':accumulator}\n              );\n          },\n          initial\n      );\n\n    }else if(op === \"all\") {\n      scopedData = jsonLogic.apply(values[0], data);\n      scopedLogic = values[1];\n      // All of an empty set is false. Note, some and none have correct fallback after the for loop\n      if( ! scopedData.length) {\n        return false;\n      }\n      for(i=0; i < scopedData.length; i+=1) {\n        if( ! jsonLogic.truthy( jsonLogic.apply(scopedLogic, scopedData[i]) )) {\n          return false; // First falsy, short circuit\n        }\n      }\n      return true; // All were truthy\n    }else if(op === \"none\") {\n      filtered = jsonLogic.apply({'filter' : values}, data);\n      return filtered.length === 0;\n\n    }else if(op === \"some\") {\n      filtered = jsonLogic.apply({'filter' : values}, data);\n      return filtered.length > 0;\n    }\n\n    // Everyone else gets immediate depth-first recursion\n    values = values.map(function(val) {\n      return jsonLogic.apply(val, data);\n    });\n\n\n    // The operation is called with \"data\" bound to its \"this\" and \"values\" passed as arguments.\n    // Structured commands like % or > can name formal arguments while flexible commands (like missing or merge) can operate on the pseudo-array arguments\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments\n    if(typeof operations[op] === \"function\") {\n      return operations[op].apply(data, values);\n    }else if(op.indexOf(\".\") > 0) { // Contains a dot, and not in the 0th position\n      var sub_ops = String(op).split(\".\");\n      var operation = operations;\n      for(i = 0; i < sub_ops.length; i++) {\n        // Descending into operations\n        operation = operation[sub_ops[i]];\n        if(operation === undefined) {\n          throw new Error(\"Unrecognized operation \" + op +\n          \" (failed at \" + sub_ops.slice(0, i+1).join(\".\") + \")\");\n        }\n      }\n\n      return operation.apply(data, values);\n    }\n\n    throw new Error(\"Unrecognized operation \" + op );\n  };\n\n  jsonLogic.uses_data = function(logic) {\n    var collection = [];\n\n    if( jsonLogic.is_logic(logic) ) {\n      var op = jsonLogic.get_operator(logic);\n      var values = logic[op];\n\n      if( ! Array.isArray(values)) {\n        values = [values];\n      }\n\n      if(op === \"var\") {\n        // This doesn't cover the case where the arg to var is itself a rule.\n        collection.push(values[0]);\n      }else{\n        // Recursion!\n        values.map(function(val) {\n          collection.push.apply(collection, jsonLogic.uses_data(val) );\n        });\n      }\n    }\n\n    return arrayUnique(collection);\n  };\n\n  jsonLogic.add_operation = function(name, code) {\n    operations[name] = code;\n  };\n\n  jsonLogic.rm_operation = function(name) {\n    delete operations[name];\n  };\n\n  jsonLogic.rule_like = function(rule, pattern) {\n    // console.log(\"Is \". JSON.stringify(rule) . \" like \" . JSON.stringify(pattern) . \"?\");\n    if(pattern === rule) {\n      return true;\n    } // TODO : Deep object equivalency?\n    if(pattern === \"@\") {\n      return true;\n    } // Wildcard!\n    if(pattern === \"number\") {\n      return (typeof rule === \"number\");\n    }\n    if(pattern === \"string\") {\n      return (typeof rule === \"string\");\n    }\n    if(pattern === \"array\") {\n      // !logic test might be superfluous in JavaScript\n      return Array.isArray(rule) && ! jsonLogic.is_logic(rule);\n    }\n\n    if(jsonLogic.is_logic(pattern)) {\n      if(jsonLogic.is_logic(rule)) {\n        var pattern_op = jsonLogic.get_operator(pattern);\n        var rule_op = jsonLogic.get_operator(rule);\n\n        if(pattern_op === \"@\" || pattern_op === rule_op) {\n        // echo \"\\nOperators match, go deeper\\n\";\n          return jsonLogic.rule_like(\n            jsonLogic.get_values(rule, false),\n            jsonLogic.get_values(pattern, false)\n          );\n        }\n      }\n      return false; // pattern is logic, rule isn't, can't be eq\n    }\n\n    if(Array.isArray(pattern)) {\n      if(Array.isArray(rule)) {\n        if(pattern.length !== rule.length) {\n          return false;\n        }\n        /*\n          Note, array order MATTERS, because we're using this array test logic to consider arguments, where order can matter. (e.g., + is commutative, but '-' or 'if' or 'var' are NOT)\n        */\n        for(var i = 0; i < pattern.length; i += 1) {\n          // If any fail, we fail\n          if( ! jsonLogic.rule_like(rule[i], pattern[i])) {\n            return false;\n          }\n        }\n        return true; // If they *all* passed, we pass\n      }else{\n        return false; // Pattern is array, rule isn't\n      }\n    }\n\n    // Not logic, not array, not a === match for rule.\n    return false;\n  };\n\n  return jsonLogic;\n}));\n"},"lineCount":466}},"error":null,"hash":"6e775b2a91b8527acb02a53b5e80028c","cacheData":{"env":{}}}